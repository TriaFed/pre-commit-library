[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pre-commit-hooks-genai"
version = "1.1.1"
description = "Pre-commit hooks library for GenAI code validation and security"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "TriaFed", email = "info@triafed.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Security",
]
keywords = ["pre-commit", "hooks", "security", "genai", "ai", "validation", "linting"]
requires-python = ">=3.8"
dependencies = [
    "detect-secrets>=1.4.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
]
all = [
    "semgrep>=1.0.0",
    "truffleHog>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/TriaFed/pre-commit-library"
Repository = "https://github.com/TriaFed/pre-commit-library"
Issues = "https://github.com/TriaFed/pre-commit-library/issues"
Documentation = "https://github.com/TriaFed/pre-commit-library#readme"

[project.scripts]
detect-hardcoded-credentials = "hooks.detect_hardcoded_credentials:main"
detect-hardcoded-urls = "hooks.detect_hardcoded_urls:main"
genai-security-check = "hooks.genai_security_check:main"
check-license = "hooks.check_license:main"
check-xml = "hooks.check_xml:main"

[tool.setuptools]
packages = ["hooks"]

[tool.setuptools.package-data]
hooks = ["*.sh", "*.py"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]
